function TSRL.WaitMinColorCount(const Color, Tolerance: Integer; Area: TBox; MinCount, WaitTime: Integer): Boolean;
var
  TimeOut: UInt64;
begin
  Result := False;
  TimeOut := GetTickCount64() + WaitTime;

  while (TimeOut >= GetTickCount64()) and (not Result) do
  begin
    Result := CountColorTolerance(Color, Area, Tolerance) >= MinCount;
    if (not Result) then
      Wait(Random(50, 100));
  end;
end;

function TSRL.WaitColor(Color: Integer; p: TPoint; WaitTime: Integer): Boolean;
var
  TimeOut: UInt64;
begin
  Result := False;
  TimeOut := GetTickCount64() + WaitTime;

  while (TimeOut >= GetTickCount64()) and (not Result) do
  begin
    Result := GetColor(p) = Color;
    if (not Result) then
      Wait(Random(50, 100));
  end;
end;

(*
type TColorSettings
~~~~~~~~~~~~~~~~~~~

A record that provides easy access to the Simba CTS settings.
*)
type
  TColorSettings = record
    CTS: Integer;
    Modifier: record
      Hue, Saturation, Sensitivity: Extended;
    end;
 end;

function TSRL.ColorSetting(_CTS: Byte; _Hue, _Saturation: Extended): TColorSettings;
begin
  Result := TColorSettings([_CTS, [_Hue, _Saturation]]);
end;

procedure TColorSettings.Retrieve();
begin
  Self.CTS := GetToleranceSpeed();

  with Self.Modifier do
  begin
    Sensitivity := GetToleranceSpeed3Modifier();
    GetToleranceSpeed2Modifiers(Hue, Saturation);
  end;
end;

procedure TColorSettings.Apply();
begin
  SetColorToleranceSpeed(Self.CTS);

  with Self.Modifier do
  begin
    SetToleranceSpeed2Modifiers(Hue, Saturation);
    SetToleranceSpeed3Modifier(Sensitivity);
  end;
end;

function FindColorsTolerance(var TPA: TPointArray; Color: Integer; SearchArea: TBox; Tolerance: Integer; cs: TColorSettings): Boolean; overload;
var
  tmp: TColorSettings;
begin
  tmp.Retrieve();
  cs.Apply();

  try
    Result := FindColorsTolerance(TPA, Color, SearchArea, Tolerance);
  finally
    tmp.Apply();
  end;
end;

function CountColorTolerance(Color: Integer; SearchArea: TBox; Tolerance: Integer; cs: TColorSettings): Integer; overload;
var
  tmp: TColorSettings;
begin
  tmp.Retrieve();
  cs.Apply();

  try
    Result := CountColorTolerance(Color, SearchArea, Tolerance);
  finally
    tmp.Apply();
  end;
end;

